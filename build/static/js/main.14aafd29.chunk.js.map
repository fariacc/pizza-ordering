{"version":3,"sources":["assets/single-pizza.png","assets/thin-crust.png","assets/thick-crust.png","assets/pepperoni.png","assets/mushrooms.png","assets/onions.png","assets/sausage.png","assets/bacon.png","assets/cheese.png","assets/black-olives.png","assets/green-pepper.png","assets/pineapple.png","assets/spinach.png","components/pizzaAddSize.tsx","pages/size.tsx","components/pizzaAddCrust.tsx","pages/crust.tsx","components/pizzaAddToppings.tsx","pages/toppings.tsx","components/checkCustomPizza.tsx","pages/checkpizza.tsx","app-router.tsx","index.tsx"],"names":["module","exports","PizzaAddSize","props","React","sizeName","setSizeName","handleAddItem","price","pizzaItem","size","crust","toppings","Grid","item","xs","md","className","FormControl","component","RadioGroup","row","aria-label","name","value","onChange","event","target","imgAlt","map","index","FormControlLabel","key","control","Radio","labelPlacement","label","src","pizzaImage","alt","to","Button","variant","color","SizePage","itemToAdd","setPizzaItem","PizzaAddCrust","crustName","setCrustName","thinCrust","thickCrust","CrustPage","PizzaAddToppings","toppingsNames","setToppingsNames","ingredients","img","pepperoniImage","mushroomsImage","onionsImage","sausageImage","baconImage","cheeseImage","olivesImage","peppersImage","pineappleImage","spinachImage","container","Select","multiple","length","alert","ingredient","MenuItem","List","ListItem","ToppingsPage","CheckCustomPizza","topping","Divider","CheckPizzaPage","AppRouter","Object","justify","alignItems","path","exact","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.14aafd29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/single-pizza.bec14cfe.png\";","module.exports = __webpack_public_path__ + \"static/media/thin-crust.e9af887c.png\";","module.exports = __webpack_public_path__ + \"static/media/thick-crust.7dab4caa.png\";","module.exports = __webpack_public_path__ + \"static/media/pepperoni.b5909369.png\";","module.exports = __webpack_public_path__ + \"static/media/mushrooms.44b22a61.png\";","module.exports = __webpack_public_path__ + \"static/media/onions.3f543253.png\";","module.exports = __webpack_public_path__ + \"static/media/sausage.b9e09852.png\";","module.exports = __webpack_public_path__ + \"static/media/bacon.ef3c5ae1.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese.5caecd29.png\";","module.exports = __webpack_public_path__ + \"static/media/black-olives.73513da6.png\";","module.exports = __webpack_public_path__ + \"static/media/green-pepper.aa816d4f.png\";","module.exports = __webpack_public_path__ + \"static/media/pineapple.d53760e8.png\";","module.exports = __webpack_public_path__ + \"static/media/spinach.6c7dc98e.png\";","import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport pizzaImage from '../assets/single-pizza.png'\r\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl\r\n} from '@material-ui/core'\r\n\r\n// Import interface\r\nimport { PizzaAddSizeInterface } from './../interfaces'\r\n\r\nconst PizzaAddSize = (props: PizzaAddSizeInterface) => {\r\n  // Prepare PizzaItemAdd states\r\n  const [sizeName, setSizeName] = React.useState('')\r\n\r\n  const sizes = [\r\n    { name: \"Small\", price: \"$8\", imgAlt: \"Image of a small size pizza\" },\r\n    { name: \"Medium\", price: \"$10\", imgAlt: \"Image of a medium pizza\" },\r\n    { name: \"Large\", price: \"$12\", imgAlt: \"Image of a large size pizza\" }\r\n  ]\r\n\r\n  props.handleAddItem({\r\n    price: props.pizzaItem.price,\r\n    size: sizeName,\r\n    crust: props.pizzaItem.crust,\r\n    toppings: props.pizzaItem.toppings\r\n  })\r\n\r\n  return (\r\n    <Grid item xs={12} md={10} className=\"add-size\">\r\n      <Grid item xs={12} md={12}>\r\n        <div className=\"pizza-background\"/>\r\n        <h1>Choose the size of your pizza</h1>\r\n        <p className=\"illustrative-image\">\r\n          The following images are for illustration purposes only.\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup row aria-label=\"size\" name=\"size\" value={sizeName} onChange={(event) => setSizeName(event.target.value)}>\r\n            {sizes.map((size, index) => (\r\n              <FormControlLabel value={size.name} key={index} control={<Radio />} labelPlacement=\"top\"\r\n                label={\r\n                  <React.Fragment>\r\n                    <img src={pizzaImage} alt={size.imgAlt}/>\r\n                    <p>{size.name + \" (\" + size.price + \")\"}</p>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} md={12} className=\"btn btn-add\">\r\n        <Link to={sizeName ? \"/crust\" : '/'}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            <LocalPizzaIcon/> Choose crust type\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PizzaAddSize\r\n","import * as React from 'react'\n\n// Import components\nimport PizzaAddSize from './../components/pizzaAddSize'\n\n// Import interfaces\nimport { PizzaItemObjInterface, SizePageInterface } from './../interfaces'\n\nconst SizePage = (props: SizePageInterface) => {\n\n  // Handle adding new pizza size\n  function handleAddItem(itemToAdd: PizzaItemObjInterface) {\n\n    if (itemToAdd.size === \"Small\") {\n      props.pizzaItem.price = 8\n    }\n    else if (itemToAdd.size === \"Medium\") {\n      props.pizzaItem.price = 10\n    }\n    else if (itemToAdd.size === \"Large\") {\n      props.pizzaItem.price = 12\n    }\n    props.pizzaItem.size = itemToAdd.size\n\n    // Update pizzaItem state\n    props.setPizzaItem(props.pizzaItem)\n  }\n\n  return (\n    <PizzaAddSize\n      sizeName={props.sizeName}\n      pizzaItem={props.pizzaItem}\n      handleAddItem={handleAddItem}\n    />\n  )\n}\nexport default SizePage\n","import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport thinCrust from '../assets/thin-crust.png'\r\nimport thickCrust from '../assets/thick-crust.png'\r\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl\r\n} from '@material-ui/core'\r\n\r\n// Import interface\r\nimport { PizzaAddCrustInterface } from './../interfaces'\r\n\r\nconst PizzaAddCrust = (props: PizzaAddCrustInterface) => {\r\n  // Prepare PizzaItemAdd states\r\n  const [crustName, setCrustName] = React.useState('')\r\n\r\n  const crusts = [\r\n    { name: \"Thin\", price: \"+$2\", imgAlt: \"Image of a thin crust pepperoni pizza\" },\r\n    { name: \"Thick\", price: \"+$4\", imgAlt: \"Image of a thick crust pepperoni pizza\" }\r\n  ]\r\n\r\n  props.handleAddItem({\r\n    price: props.pizzaItem.price,\r\n    size: props.pizzaItem.size,\r\n    crust: crustName,\r\n    toppings: props.pizzaItem.toppings\r\n  })\r\n\r\n  return (\r\n    <Grid item xs={12} md={10} className=\"add-crust\">\r\n      <Grid item xs={12} md={12}>\r\n        <div className=\"pizza-background\"/>\r\n        <h1>Choose the crust type of your pizza</h1>\r\n        <p className=\"illustrative-image\">\r\n          The following images are for illustration purposes only.\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"crust\" name=\"crust\" value={crustName} onChange={(event) => setCrustName(event.target.value)}>\r\n            {crusts.map((crust, index) => (\r\n              <FormControlLabel key={index} value={crust.name} control={<Radio />} labelPlacement=\"top\"\r\n                label={\r\n                  <React.Fragment>\r\n                    <img src={crust.name === \"Thin\" ? thinCrust : thickCrust} alt={crust.imgAlt}/>\r\n                    <p>{crust.name + \" (\" + crust.price + \")\"}</p>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} md={12} className=\"btn btn-add\">\r\n        <Link to={crustName ? \"/toppings\" : '/crust'}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            <LocalPizzaIcon/> Choose ingredients\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PizzaAddCrust\r\n","import * as React from 'react'\r\n\r\n// Import components\r\nimport PizzaAddCrust from './../components/pizzaAddCrust'\r\n\r\n// Import interfaces\r\nimport { PizzaItemObjInterface, CrustPageInterface } from './../interfaces'\r\n\r\nconst CrustPage = (props: CrustPageInterface) => {\r\n  // Handle adding new pizza crust type\r\n  function handleAddItem(itemToAdd: PizzaItemObjInterface) {\r\n    if (itemToAdd.crust === \"Thin\") {\r\n      props.pizzaItem.price = props.pizzaItem.price + 2\r\n    }\r\n    else if (itemToAdd.crust === \"Thick\"){\r\n      props.pizzaItem.price = props.pizzaItem.price + 4\r\n    }\r\n    props.pizzaItem.crust = itemToAdd.crust\r\n\r\n    // Update pizzaItem state\r\n    props.setPizzaItem(props.pizzaItem)\r\n  }\r\n\r\n  return (\r\n    <PizzaAddCrust\r\n      crustName={props.crustName}\r\n      pizzaItem={props.pizzaItem}\r\n      handleAddItem={handleAddItem}\r\n    />\r\n  )\r\n}\r\nexport default CrustPage\r\n","import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport pepperoniImage from '../assets/pepperoni.png'\r\nimport mushroomsImage from '../assets/mushrooms.png'\r\nimport onionsImage from '../assets/onions.png'\r\nimport sausageImage from '../assets/sausage.png'\r\nimport baconImage from '../assets/bacon.png'\r\nimport cheeseImage from '../assets/cheese.png'\r\nimport olivesImage from '../assets/black-olives.png'\r\nimport peppersImage from '../assets/green-pepper.png'\r\nimport pineappleImage from '../assets/pineapple.png'\r\nimport spinachImage from '../assets/spinach.png'\r\n\r\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\r\n\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  List,\r\n  ListItem,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\n// Import interface\r\nimport { PizzaAddToppingsInterface } from './../interfaces'\r\n\r\nconst PizzaAddToppings = (props: PizzaAddToppingsInterface) => {\r\n  // Prepare PizzaItemAdd states\r\n  const [toppingsNames, setToppingsNames] = React.useState<Array<string>>([])\r\n\r\n  const ingredients = [\r\n    { name: \"Pepperoni\", imgAlt: \"A pepperoni slice\", img: pepperoniImage },\r\n    { name: \"Mushrooms\", imgAlt: \"White mushrooms\", img: mushroomsImage },\r\n    { name: \"Onions\", imgAlt: \"Onions\", img: onionsImage },\r\n    { name: \"Sausage\", imgAlt: \"Sausage\", img: sausageImage },\r\n    { name: \"Bacon\", imgAlt: \"Slices of beacon\", img: baconImage },\r\n    { name: \"Extra cheese\", imgAlt: \"A piece of cheese\", img: cheeseImage },\r\n    { name: \"Black olives\", imgAlt: \"Black olives and its green leaves\", img: olivesImage },\r\n    { name: \"Green peppers\", imgAlt: \"Green pepper\", img: peppersImage },\r\n    { name: \"Pineapple\", imgAlt: \"A whole pineapple and a sliced piece\", img: pineappleImage },\r\n    { name: \"Spinach\", imgAlt: \"Spinach\", img: spinachImage }\r\n  ]\r\n\r\n  props.handleAddItem({\r\n    price: props.pizzaItem.price,\r\n    size: props.pizzaItem.size,\r\n    crust: props.pizzaItem.crust,\r\n    toppings: toppingsNames\r\n  })\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    if (props.pizzaItem.size === \"Small\" && toppingsNames.length >= 5) {\r\n      alert('Please choose only 5 ingredients')\r\n      setToppingsNames([])\r\n    }\r\n    else if (props.pizzaItem.size === \"Medium\" && toppingsNames.length >= 7) {\r\n      alert('Please choose only 7 ingredients')\r\n      setToppingsNames([])\r\n    }\r\n    else if (props.pizzaItem.size === \"Large\" && toppingsNames.length >= 9) {\r\n      alert('Please choose only 9 ingredients')\r\n      setToppingsNames([])\r\n    }\r\n    else{\r\n      setToppingsNames(event.target.value as string[]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} md={10} className=\"add-toppings\">\r\n      <Grid item xs={12} md={12}>\r\n        <div className=\"pizza-background\"/>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12} md={5}>\r\n          <h1>Choose the ingredients below for the topping of your pizza</h1>\r\n          <h2>\r\n            You can add from [0-3] ingredients without any additional cost for your pizza.\r\n          </h2>\r\n          <h2>Each new addition after the third one costs $0.50.</h2>\r\n          <FormControl component=\"fieldset\">\r\n            <Select multiple value={toppingsNames} onChange={handleChange}>\r\n              {ingredients.map((ingredient, index) => (\r\n                <MenuItem key={index} value={ingredient.name}>\r\n                  {ingredient.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} md={7}>\r\n          <h2><strong>Ingredients avaiable:</strong></h2>\r\n          <p className=\"illustrative-image\">\r\n            The following images are for illustration purposes only.\r\n          </p>\r\n          <List className=\"ingredients-pictures\">\r\n            {ingredients.map((ingredient, index) => (\r\n              <ListItem key={index}>\r\n                <p>{ingredient.name}</p>\r\n                <img src={ingredient.img} alt={ingredient.imgAlt}/>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} md={12} className=\"btn btn-add\">\r\n        <Link to={toppingsNames.length !== 0 ? \"/check-pizza\" : '/toppings'}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            <LocalPizzaIcon/> Check your pizza\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PizzaAddToppings\r\n","import * as React from 'react'\r\n\r\n// Import components\r\nimport PizzaAddToppings from './../components/pizzaAddToppings'\r\n\r\n// Import interfaces\r\nimport { PizzaItemObjInterface, ToppingsPageInterface } from './../interfaces'\r\n\r\nconst ToppingsPage = (props: ToppingsPageInterface) => {\r\n  // Handle adding new pizza ingredient as topping\r\n  function handleAddItem(itemToAdd: PizzaItemObjInterface) {\r\n    if (itemToAdd.toppings.length > 3) {\r\n      props.pizzaItem.price = props.pizzaItem.price + 0.5\r\n    }\r\n    props.pizzaItem.toppings = itemToAdd.toppings\r\n\r\n    // Update pizzaItem state\r\n    props.setPizzaItem(props.pizzaItem)\r\n  }\r\n\r\n  return (\r\n    <PizzaAddToppings\r\n      toppingsNames={props.toppingsNames}\r\n      pizzaItem={props.pizzaItem}\r\n      handleAddItem={handleAddItem}\r\n    />\r\n  )\r\n}\r\nexport default ToppingsPage\r\n","import * as React from 'react'\r\nimport thinCrust from '../assets/thin-crust.png'\r\nimport thickCrust from '../assets/thick-crust.png'\r\nimport pizzaImage from '../assets/single-pizza.png'\r\n\r\nimport {\r\n  Grid,\r\n  Divider,\r\n  List,\r\n  ListItem\r\n} from '@material-ui/core'\r\n\r\n// Import interface\r\nimport { PizzaListInterface } from './../interfaces'\r\n\r\nconst CheckCustomPizza = (props: PizzaListInterface) => {\r\n  return (\r\n    <Grid item xs={12} md={10} className=\"check-pizza\">\r\n      <Grid item xs={12} md={12}>\r\n        <div className=\"pizza-background\"/>\r\n        <h1>Here's your custom pizza :)</h1>\r\n        <h2>Check below the details of your order</h2>\r\n        <p className=\"illustrative-image\">\r\n          The following images are for illustration purposes only.\r\n        </p>\r\n      </Grid>\r\n      <Grid container className=\"pizza-details\">\r\n        <Grid item xs={12} md={4} className=\"pizza-details__size\">\r\n          <p>Size: <strong>{props.pizzaItem.size}</strong></p>\r\n          <img src={pizzaImage} alt=\"Pizza\"/>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} className=\"pizza-details__crust\">\r\n          <p>Crust type: <strong>{props.pizzaItem.crust}</strong></p>\r\n          <img src={props.pizzaItem.crust === \"Thin\" ? thinCrust : thickCrust} alt=\"Crust type of the pizza\"/>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} className=\"pizza-details__toppings\">\r\n          <p>Toppings:</p>\r\n          <List>\r\n            { props.pizzaItem.toppings.map(topping =>\r\n              <ListItem>\r\n                <p><strong>{topping}</strong></p>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider/>\r\n      <Grid item xs={12} md={12} className=\"pizza-details__price\">\r\n        <p>Total purchased: <strong>${props.pizzaItem.price}</strong></p>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CheckCustomPizza\r\n","import * as React from 'react'\n\n// Import components\nimport CheckCustomPizza from './../components/checkCustomPizza'\n\n// Import interfaces\nimport { PizzaListInterface } from './../interfaces'\n\nconst CheckPizzaPage = (props: PizzaListInterface) => {\n  return (\n    <CheckCustomPizza\n      pizzaItem={props.pizzaItem}\n    />\n  )\n}\nexport default CheckPizzaPage\n","import * as React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\n// Import pages\nimport SizePage from './pages/size'\nimport CrustPage from './pages/crust'\nimport ToppingsPage from './pages/toppings'\nimport CheckPizzaPage from './pages/checkpizza'\n\nimport { Grid } from '@material-ui/core'\n\n// Import interface\nimport { PizzaItemObjInterface } from './interfaces'\n\nconst AppRouter = () => {\n  // Prepare default app states\n  const [pizzaItem, setPizzaItem] = React.useState<PizzaItemObjInterface>(Object)\n  const [sizeName, setSizeName] = React.useState('')\n  const [crustName, setCrustName] = React.useState('')\n  const [toppingsNames, setToppingsNames] = React.useState<Array<string>>([])\n\n  return (\n    <div className=\"app\">\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <BrowserRouter>\n          <Switch>\n            {/* Add size of the pizza */}\n            <Route path=\"/\" exact={true}>\n              <SizePage\n                sizeName={sizeName}\n                pizzaItem={pizzaItem}\n                setSizeName={setSizeName}\n                setPizzaItem={setPizzaItem}\n              />\n            </Route>\n\n            {/* Add crust type*/}\n            <Route path=\"/crust\">\n              <CrustPage\n                crustName={crustName}\n                pizzaItem={pizzaItem}\n                setCrustName={setCrustName}\n                setPizzaItem={setPizzaItem}\n              />\n            </Route>\n\n            {/* Add ingredients as toppings*/}\n            <Route path=\"/toppings\">\n              <ToppingsPage\n                toppingsNames={toppingsNames}\n                pizzaItem={pizzaItem}\n                setToppingsNames={setToppingsNames}\n                setPizzaItem={setPizzaItem}\n              />\n            </Route>\n\n            {/* Check the custom pizza*/}\n            <Route path=\"/check-pizza\">\n              <CheckPizzaPage\n                pizzaItem={pizzaItem}\n              />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </Grid>\n    </div>\n  )\n}\n\nexport default AppRouter\n","import * as React from 'react'\nimport { render } from 'react-dom'\n\n// Import components\nimport AppRouter from './app-router'\n\n// Import styles\nimport './styles/styles.scss'\n\nconst rootElement = document.getElementById('root')\nrender(<AppRouter />, rootElement)\n"],"sourceRoot":""}